# 应用端口号
server.port=8102
# 应用名称
spring.application.name=seata-account-service
# 数据库驱动：
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据源名称
spring.datasource.name=seata
# 数据库连接地址
spring.datasource.url=jdbc:mysql://134.134.2.70:3306/seata?serverTimezone=UTC
# 数据库用户名&密码：
spring.datasource.username=root
spring.datasource.password=123456
# Nacos帮助文档: https://nacos.io/zh-cn/docs/concepts.html
# Nacos认证信息
#spring.cloud.nacos.discovery.username=nacos
#spring.cloud.nacos.discovery.password=nacos
# Nacos 服务发现与注册配置，其中子属性 server-addr 指定 Nacos 服务器主机和端口
spring.cloud.nacos.discovery.server-addr=134.134.2.78:8848
# 注册到 nacos 的指定 namespace，默认为 public
spring.cloud.nacos.discovery.namespace=public

logging.level.com.solvay.account=debug

# Mybytis Plus Config
mybatis-plus.mapper-locations=classpath*:/mapper/*.xml
mybatis-plus.type-aliases-package=com.solvay.account.entity
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.global-config.db-config.id-type=auto

#spring.cloud.alibaba.seata.tx-service-group=${spring.application.name}-group
# Seata Config
seata.enabled=true
seata.application-id=${spring.application.name}
# 事务群组（可以每个应用独立取名，也可以使用相同的名字）
seata.tx-service-group=${spring.application.name}-group
#seata.enable-auto-data-source-proxy=true
#seata.use-jdk-proxy=false
# 异步提交缓存队列长度（默认10000）
#seata.client.rm.async-commit-buffer-limit=10000
# 一阶段结果上报TC重试次数（默认5）
#seata.client.rm.report-retry-count=5
# 自动刷新缓存中的表结构（默认false）
#seata.client.rm.table-meta-check-enable=false
#seata.client.rm.report-success-enable=false
#seata.client.rm.saga-branch-register-enable=false
# 校验或占用全局锁重试间隔（默认10ms）
#seata.client.rm.lock.retry-interval=10
# 校验或占用全局锁重试次数（默认30）
#seata.client.rm.lock.retry-times=30
# 分支事务与其它全局回滚事务冲突时锁策略（优先释放本地锁让回滚成功）
#seata.client.rm.lock.retry-policy-branch-rollback-on-conflict=true
# 一阶段全局提交结果上报TC重试次数（默认1次，建议大于1）
#seata.client.tm.commit-retry-count=5
# 一阶段全局回滚结果上报TC重试次数（默认1次，建议大于1）
#seata.client.tm.rollback-retry-count=5
#seata.client.tm.degrade-check=false
#seata.client.tm.degrade-check-allow-times=10
#seata.client.tm.degrade-check-period=2000
# 二阶段回滚镜像校验（默认true开启）
#seata.client.undo.data-validation=true
# undo序列化方式（默认jackson）
#seata.client.undo.log-serialization=jackson
#seata.client.undo.only-care-update-columns=true
# 自定义undo表名（默认undo_log）
#seata.client.undo.log-table=undo_log
# 日志异常输出概率（默认100）
#seata.client.log.exceptionRate=100
# TC 集群（必须与seata-server保持一致）
seata.service.vgroup-mapping.${spring.application.name}-group=default
seata.service.grouplist.default=134.134.2.78:8091
# 降级开关
#seata.service.enable-degrade=false
# 禁用全局事务（默认false)
#seata.service.disable-global-transaction=false
#seata.transport.shutdown.wait=3
#seata.transport.thread-factory.boss-thread-prefix=NettyBoss
#seata.transport.thread-factory.worker-thread-prefix=NettyServerNIOWorker
#seata.transport.thread-factory.server-executor-thread-prefix=NettyServerBizHandler
#seata.transport.thread-factory.share-boss-worker=false
#seata.transport.thread-factory.client-selector-thread-prefix=NettyClientSelector
#seata.transport.thread-factory.client-selector-thread-size=1
#seata.transport.thread-factory.client-worker-thread-prefix=NettyClientWorkerThread
#seata.transport.thread-factory.worker-thread-size=default
#seata.transport.thread-factory.boss-thread-size=1
#seata.transport.type=TCP
#seata.transport.server=NIO
#seata.transport.heartbeat=true
#seata.transport.serialization=seata
#seata.transport.compressor=none
# 客户端事务消息请求是否批量合并发送（默认true）
#seata.transport.enable-client-batch-send-request=true

seata.registry.type=nacos
#seata.registry.nacos.application=seata-server
seata.registry.nacos.server-addr=134.134.2.78:8848
seata.registry.nacos.group=SEATA_GROUP
seata.registry.nacos.cluster=default
seata.registry.nacos.namespace=
seata.registry.nacos.username=
seata.registry.nacos.password=

seata.config.type=nacos
seata.config.nacos.serverAddr=134.134.2.78:8848
seata.config.nacos.namespace=
seata.config.nacos.group=SEATA_GROUP
seata.config.nacos.username=
seata.config.nacos.password=
